spring:
  profiles:
    default: homol
  application:
    name: hodpe-api
  servlet:
    multipart:
      max-file-size: 10MB
  #configuração do jackson
  jackson:
    default-property-inclusion: NON_NULL

  artemis:
    broker-url: ${ARTEMIS_URL:tcp://localhost:61616}
    user: ${ARTEMIS_USER:activemq}
    password: ${ARTEMIS_PASSWORD:admin}
    embedded:
      persistent: false

  threads:
    virtual:
      enabled: true
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      org:
        hibernate:
          envers:
            "[default_schema]": auditoria

  security:
    oauth2:
      client:
        registration:
          keycloak:
            clientId: ${KEYCLOACK_CLIENT_ID}
            clientSecret: ${KEYCLOACK_SECRET}
            scope: openid,email,profile
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          keycloak-client-credentials:
            clientId: ${KEYCLOACK_CLIENT_ID}
            clientSecret: ${KEYCLOACK_SECRET}
            scope: openid,email,profile
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            issuer-uri: ${KEYCLOACK_BASE}/realms/${KEYCLOACK_REALM}
            user-name-attribute: preferred_username
          keycloak-client-credentials:
            issuer-uri: ${KEYCLOACK_BASE}/realms/${KEYCLOACK_REALM}
            user-name-attribute: preferred_username
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOACK_BASE}/realms/${KEYCLOACK_REALM}
          jwk-set-uri: ${KEYCLOACK_BASE}/realms/${KEYCLOACK_REALM}/protocol/openid-connect/certs

# Swagger
springdoc:
  swagger-ui:
    filter: true
    use-root-path: true
  show-login-endpoint: true
  api-docs:
    path: /v3/api-docs

logging:
  file:
    name: /var/log/pontoEletronicoApi.log
    path: /var/log
  pattern:
    console: "%d %-5level %logger : %msg%n"
  level:
    web: debug
    sql: info
    root: error

# Server configuration
server:
  port: ${APP_PORT:80}
  forward-headers-strategy: framework
  compression:
    enabled: true
    min-response-size: 2048
    mime-types:
      - application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

cors:
  allowedOriginPatterns: ${ALLOWED_ORIGINS_PATTERN:http://localhost:3000}

websocket:
  relay-host: ${WEBSOCKET_RELAY_HOST:localhost}
  relay-port: ${WEBSOCKET_RELAY_PORT:61613}
  user: ${WEBSOCKET_RELAY_USER:admin}
  password: ${WEBSOCKET_RELAY_PASSWORD:admin}
